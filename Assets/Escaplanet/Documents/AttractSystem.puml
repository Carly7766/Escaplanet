@startuml

package Data {
struct EntityId {
Index: ushort
Generation: byte
}

interface IEntity {
Id: EntityId { get; }
}

interface IAttractableEntity {
Position: Vector2 { get; }
Mass: float { get; }
Attract(Vector2 force): void
}

interface IPlanetAttractSourceEntity {
Position: Vector2 { get; }
Mass: float{ get; }
GravityConstant: float { get; }

OnEnterAttractArea: Observable<IAttractableEntity> { get; }
OnExitAttractArea: Observable<IAttractableEntity> { get; }
}
}

package System {
interface IAttractSystem {
+ RegisterSourceEntity(entity: IAttractSourceEntity): void
+ UnregisterSourceEntity(entityId: EntityId): void
}
class PlanetAttractSystem {
}
}

package Framework {
class AttractableComponent {
}

class PlanetAttractSourceComponent {
}
}

package Composition {
}

Data.IEntity "1" -- "1" Data.EntityId
Data.IPlanetAttractSourceEntity ..|> Data.IEntity
Data.IAttractableEntity ..|> Data.IEntity

Framework.AttractableComponent ..|> Data.IAttractableEntity
Framework.PlanetAttractSourceComponent ..|> Data.IPlanetAttractSourceEntity

System.PlanetAttractSystem ..|> System.IAttractSystem 
System.PlanetAttractSystem ..> Data.IPlanetAttractSourceEntity

@enduml